#!/bin/bash

CRT_FILES="*.crl_url"
OPENSSL=`which openssl 2>/dev/null`
# CRLs Timing, in minutes (WARN) and in days (ALER):
WARN=540
ALER=3

NAGIOS_OK=0
NAGIOS_WARNING=1
NAGIOS_ERROR=2
NAGIOS_UNKNOWN=3

IGNORECRL=0
while getopts :n opt; do
  case $opt in
    n)
      IGNORECRL=1
    ;;
  esac
done

#
# Changed this to use seconds since the epoch, which actually is standard and can be 
# compared to something else. Using YYYYMMDDhh assumes a day has 100 hours, and a month
# have 10000 hours. Ulf Tigerstedt, 21.7.2011 (ulf.tigerstedt@csc.fi) NGI_FI SAM Nagios 
# admin
#

NextUpdateOfCRL()
{
  crlhashfile="$1"

  if [ ! -r "${crlhashfile}" ]; then
    nextUpdate=0
    return
  fi

  nextUpdateText=`${OPENSSL} crl -noout -in "${crlhashfile}" -nextupdate| cut -d = -f 2`
  nextUpdate=`date +%s -d "$nextUpdateText"`

}

# Be default return OK
crl_check=$NAGIOS_OK
OUTPUT=""

# SSL is mandatory for security tests
if [ "x$OPENSSL" == "x" ]; then
	echo -en "The openssl executable wasn't found. The output of 'which openssl' was empty!\n"
	exit $NAGIOS_UNKNOWN
fi

##########################
# COMPONENT SPECIFIC PART
##########################

if [ "x$X509_CERT_DIR" != "x" ]; then
    OUTPUT=${OUTPUT}"X509_CERT_DIR is defined to $X509_CERT_DIR\n"
    if [ -d $X509_CERT_DIR ]; then
        CERTDIR=$X509_CERT_DIR
    else
        OUTPUT=${OUTPUT}"X509_CERT_DIR seems not to exist: using default directory.\n"
        CERTDIR=/etc/grid-security/certificates
		crl_check=$NAGIOS_WARNING
    fi
else
    CERTDIR=/etc/grid-security/certificates
fi

OUTPUT=${OUTPUT}"Using certificates dir : $CERTDIR\n"

#set +x
CRT=`ls -1 $CERTDIR/$CRT_FILES 2>/dev/null`

if [ "x$CRT" == "x" ]; then
	echo "Cannot find certificate files, exiting"
	exit $NAGIOS_OK
else
	for I_CRT_INFO in $CRT ; do
                
		# try with the new version of files (>= 1.38)
		I_CRT=`ls $I_CRT_INFO | sed -e "s/\.crl_url/\.pem/g"`
                if [ ! -f $I_CRT ]; then
			# fail to the old versions (< 1.38)
			I_CRT=`ls $I_CRT_INFO | sed -e "s/\.crl_url/\.0/g"`
			if [ ! -f $I_CRT ] ; then
				OUTPUT=${OUTPUT}"Found .crl_url file without .info or certificate: $I_CRT_INFO\n"
				# no need to continue, there is no CRT file
				continue
			fi
		fi

		SUB=`$OPENSSL x509 -in $I_CRT -noout -subject| sed "s/subject= //"`
		SUBF=$SUB" ("`ls $I_CRT |sed -e "s/.*\///g"`")"

		# Checking CRT is not expired. If it is, then skip it.
		if [ `$OPENSSL verify -CApath $CERTDIR $I_CRT |grep "error 10"|wc -l` != "0" ]; then
			EXCEPTION[${#EXCEPTION[@]}+1]=$SUB
		fi
		
		# find CRL based on CRT hash, this works
		# with old and new versions
		CRT_HASH=`${OPENSSL} x509 -hash -noout -in $I_CRT 2>&1`
		if [ $? -ne 0 ]; then
			OUTPUT=${OUTPUT}"Failed calculating $SUBF hash: $CRT_HASH"
			crl_check=$NAGIOS_WARNING
			continue
		fi
		I_CRL="$CERTDIR/${CRT_HASH}.r0"

		if [ ! -f $I_CRL ]; then
			index=0

			# Checking EXCEPTIONS
			SKIP=
			while [ "$index" -le "${#EXCEPTION[@]}" ]; do
				j=${EXCEPTION[$index]}
				let "index = $index + 1"
				if [ "$j" == "$SUB" ]; then
					SKIP=1
				fi
			done

			if [ "$SKIP" == "1" ]; then
				OUTPUT=${OUTPUT}"$SUBF has been skipped by policy\n"
			else
				OUTPUT=${OUTPUT}"$SUBF has no CRL\n"
				crl_check=$NAGIOS_ERROR
			fi
		else
			if [ "$IGNORECRL" == "1" ]; then
				OUTPUT=${OUTPUT}"CRL expiration check is disabled\n"
			else
				NextUpdateOfCRL "$I_CRL"
				today=`date -u '+%s'`
				d=$((nextUpdate-today))
				if [ $d -le 0 ]; then
					OUTPUT=${OUTPUT}"$SUBF CRL expired $((-$d/3600)) hours ago\n"
					crl_check=$NAGIOS_ERROR
				elif [ $d -le $((WARN*60)) ]; then
					OUTPUT=${OUTPUT}"$SUBF CRL is expiring in less than $((WARN/60)) hours ($nextUpdateText)\n"
					crl_check=$NAGIOS_WARNING
				fi
			fi
		fi
	done
fi

############################
# Printing global result
############################
if [ "$crl_check" == "$NAGIOS_OK" ]; then
	echo "OK: All CRLs were checked and seem to be valid."
elif [ "$crl_check" == "$NAGIOS_WARNING" ]; then
	echo "WARNING: Some warnings found. Please check details."
else
	echo "ERROR: Some errors found. Please check details."
fi

echo -en "${OUTPUT}"|uniq

exit $crl_check
#****

