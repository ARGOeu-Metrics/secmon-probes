#!/bin/bash
cur_path=`dirname $0`

if [ "X"$SITE_NAME == "X" ] && [ "X"$LCG_GFAL_INFOSYS != "X" ]; then
	if [ "X"$GLOBUS_CE != "X" ]; then
		export SITE_NAME=`ldapsearch -LL -x -h $LCG_GFAL_INFOSYS -b o=grid "(GlueClusterService=$GLOBUS_CE)" GlueForeignKey |grep GlueSiteUniqueID|awk -F= '{print $2}'`
	elif [ "X"$CE_ID != "X" ]; then
		export SITE_NAME=`ldapsearch -LL -x -h $LCG_GFAL_INFOSYS -b o=grid "(GlueClusterService=$CE_ID)" GlueForeignKey |grep GlueSiteUniqueID|awk -F= '{print $2}'`
	fi
fi

if [ -f /cvmfs/grid.cern.ch/pakiti/bin/pakiti-client ]; then
  result=`/cvmfs/grid.cern.ch/pakiti/bin/pakiti-client --url="https://pakiti.egi.eu/feed/" --site="${SITE_NAME}" --tag="Nagios"`
  exit_status=$?
  fallback=0
else
  result=`${cur_path}/pakiti-client 2>&1`
  exit_status=$?
  fallback=1
fi

if [ ${fallback} == 1 ]; then
  fmessage="FALLBACK, "
fi

if [ ${exit_status} == 0 ]; then
  if [ ${fallback} == 0 ]; then
    echo "OK: Pakiti reported correctly to all the configured servers."
  else
    echo "WARNING: ${fmessage}Pakiti reported correctly to all the configured servers."
  fi
else
    echo "ERROR: ${fmessage}There was an error on pakiti reporting."
fi

echo ${result}|sed -e "s# ERROR#\nERROR#g" -e "s# WARNING#\nWARNING#g"
exit ${exit_status}
