#!/bin/bash

VERSION="2.0.3"

# Getting parameters from the configuration file
SERVERS="https://pakiti.afroditi.hellasgrid.gr/feed/ https://pakiti.cern.ch/feed/"
CURL_BIN="/usr/bin/curl -ks"
CA_PATH="/etc/grid-security/certificates/"
TAG="Nagios Pakiti probe"

# Getting system parameters
HOSTNAME=`hostname -f`
RPMS=`rpm -qa --queryformat "%{installtime} NEWPAKITIRPM=%{NAME} %{EPOCH}:%{VERSION}-%{RELEASE}\n" |sort -nr | sed -e 's/^[^ ]* //' |sed -e 's/(none)/0/g' |xargs`
KERNEL=`uname -r`
CURL=""

CURL="${CURL} --capath ${CA_PATH}";
CURL="${CURL} -F host=\"${HOSTNAME}\"";
CURL="${CURL} -F tag=\"${TAG}\"";
CURL="${CURL} -F kernel=\"${KERNEL}\"";
CURL="${CURL} -F version=\"${VERSION}\"";
CURL="${CURL} -F rpms=\"${RPMS}'\" ";


server_count=0
server_ok_count=0
for i in $SERVERS; do
  server_count=`expr $server_count + 1`
  COMMAND="${CURL_BIN}${CURL}${i}"
  RESULT=`eval "${COMMAND}"`
  exit_code=$?
  if [ $exit_code == 0 ] ; then
    server_ok_count=`expr $server_ok_count + 1`
  fi
done

if [ $server_ok_count == $server_count ]; then
  echo "OK: Pakiti reported correctly to $server_count servers."
  exit $SAME_OK
else
  if [ $server_ok_count != 0 ]; then
    echo "WARNING: Pakiti reported on $server_ok_count out of $server_count servers."
    exit $SAME_WARNING
  else
    echo "ERROR: There was an error on pakiti reporting."
    exit $SAME_ERROR
  fi
fi
